/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Models.Bill;
import Models.BillInfo;
import Models.Food;
import Models.FoodCategory;
import Models.TableFood;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import static com.itextpdf.text.Font.ITALIC;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import controller.BillController;
import controller.BillInfoController;
import controller.FoodCategoryController;
import controller.FoodController;
import controller.TableController;
import static java.awt.Font.BOLD;
import java.awt.Image;
import java.awt.event.ItemEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class Home extends javax.swing.JFrame {

    String userName;
    int type;
    ArrayList<FoodCategory> foodCategoryList; // danh sách các món
    ArrayList<Food> foodList; //danh sách món
    ArrayList<TableFood> listTable; // danh sách bàn
    private int idTable = 0; // bàn đang được chọn
    ArrayList<JLabel> listLbTable = new ArrayList<>(); // list label bàn
    ArrayList<JLabel> listLbTextTable = new ArrayList<>(); // list label ban

    /**
     * Creates new form Home
     */
    public Home(String UserName, int Type) {
        initComponents();
        this.setLocationRelativeTo(null);
        try {
            loadData();
            loadTable();
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.userName = UserName;
        this.type = Type;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cbCategory = new javax.swing.JComboBox<>();
        cbFood = new javax.swing.JComboBox<>();
        spCount = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        spDiscount = new javax.swing.JSpinner();
        jButton3 = new javax.swing.JButton();
        cbListTable = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        tfTotal = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        btnPrint = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbBillInfo = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        lbTable1 = new javax.swing.JLabel();
        lbTextTable1 = new javax.swing.JLabel();
        lbTextTable2 = new javax.swing.JLabel();
        lbTable2 = new javax.swing.JLabel();
        lbTextTable3 = new javax.swing.JLabel();
        lbTable3 = new javax.swing.JLabel();
        lbTextTable4 = new javax.swing.JLabel();
        lbTable4 = new javax.swing.JLabel();
        lbTable5 = new javax.swing.JLabel();
        lbTextTable5 = new javax.swing.JLabel();
        lbTextTable6 = new javax.swing.JLabel();
        lbTable6 = new javax.swing.JLabel();
        lbTextTable7 = new javax.swing.JLabel();
        lbTable7 = new javax.swing.JLabel();
        lbTextTable8 = new javax.swing.JLabel();
        lbTable8 = new javax.swing.JLabel();
        lbTable9 = new javax.swing.JLabel();
        lbTextTable9 = new javax.swing.JLabel();
        lbTextTable10 = new javax.swing.JLabel();
        lbTable10 = new javax.swing.JLabel();
        lbTextTable11 = new javax.swing.JLabel();
        lbTable11 = new javax.swing.JLabel();
        lbTextTable12 = new javax.swing.JLabel();
        lbTable12 = new javax.swing.JLabel();
        lbTable13 = new javax.swing.JLabel();
        lbTextTable13 = new javax.swing.JLabel();
        lbTextTable14 = new javax.swing.JLabel();
        lbTable14 = new javax.swing.JLabel();
        lbTextTable15 = new javax.swing.JLabel();
        lbTable15 = new javax.swing.JLabel();
        lbTextTable16 = new javax.swing.JLabel();
        lbTable16 = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        cbCategory.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCategoryItemStateChanged(evt);
            }
        });

        jButton1.setText("Thêm món");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Giảm giá");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Chuyển đến bàn");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        cbListTable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bàn 1", "Bàn 2", "Bàn 3", "Bàn 4", "Bàn 5", "Bàn 6", "Bàn 7", "Bàn 8", "Bàn 9", "Bàn 10", "Bàn 11", "Bàn 12", "Bàn 13", "Bàn 14", "Bàn 15", "Bàn 16" }));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Tổng tiền");

        tfTotal.setEditable(false);
        tfTotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tfTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfTotal.setText("0");

        jLabel34.setForeground(new java.awt.Color(204, 204, 204));
        jLabel34.setText("CafeManager");

        btnPrint.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnPrint.setText("Thanh toán");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        jButton5.setText("Xóa món");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbCategory, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbFood, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(spCount, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(spDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                                .addComponent(cbListTable, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLabel1)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(tfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel34)
                        .addGap(83, 83, 83))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbFood, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(spDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(cbListTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(tfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPrint, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                .addGap(47, 47, 47)
                .addComponent(jLabel34))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        tbBillInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Tên món", "Số lượng", "Đơn giá", "Thành tiền"
            }
        ));
        jScrollPane1.setViewportView(tbBillInfo);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        lbTable1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/table_empty.png"))); // NOI18N
        lbTable1.setName("1"); // NOI18N

        lbTextTable1.setText("Bàn 1");

        lbTextTable2.setText("Bàn 2");

        lbTable2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/table_empty.png"))); // NOI18N
        lbTable2.setName("2"); // NOI18N

        lbTextTable3.setText("Bàn 3");

        lbTable3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/table_empty.png"))); // NOI18N
        lbTable3.setName("3"); // NOI18N

        lbTextTable4.setText("Bàn 4");

        lbTable4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/table_empty.png"))); // NOI18N
        lbTable4.setName("4"); // NOI18N

        lbTable5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/table_empty.png"))); // NOI18N
        lbTable5.setName("5"); // NOI18N

        lbTextTable5.setText("Bàn 5");

        lbTextTable6.setText("Bàn 6");

        lbTable6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/table_empty.png"))); // NOI18N
        lbTable6.setName("6"); // NOI18N

        lbTextTable7.setText("Bàn 7");

        lbTable7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/table_empty.png"))); // NOI18N
        lbTable7.setName("7"); // NOI18N

        lbTextTable8.setText("Bàn 8");

        lbTable8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/table_empty.png"))); // NOI18N
        lbTable8.setName("8"); // NOI18N

        lbTable9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/table_empty.png"))); // NOI18N
        lbTable9.setName("9"); // NOI18N

        lbTextTable9.setText("Bàn 9");

        lbTextTable10.setText("Bàn 10");

        lbTable10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/table_empty.png"))); // NOI18N
        lbTable10.setName("10"); // NOI18N

        lbTextTable11.setText("Bàn 11");

        lbTable11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/table_empty.png"))); // NOI18N
        lbTable11.setName("11"); // NOI18N

        lbTextTable12.setText("Bàn 12");

        lbTable12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/table_empty.png"))); // NOI18N
        lbTable12.setName("12"); // NOI18N

        lbTable13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/table_empty.png"))); // NOI18N
        lbTable13.setName("13"); // NOI18N

        lbTextTable13.setText("Bàn 13");

        lbTextTable14.setText("Bàn 14");

        lbTable14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/table_empty.png"))); // NOI18N
        lbTable14.setName("14"); // NOI18N

        lbTextTable15.setText("Bàn 15");

        lbTable15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/table_empty.png"))); // NOI18N
        lbTable15.setName("15"); // NOI18N

        lbTextTable16.setText("Bàn 16");

        lbTable16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/table_empty.png"))); // NOI18N
        lbTable16.setName("16"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(lbTable1))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(lbTextTable1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbTable2)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(lbTextTable2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbTable3)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(lbTextTable3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbTable4)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(lbTextTable4))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbTable5)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(lbTextTable5)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbTable6)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(lbTextTable6)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbTable7)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(lbTextTable7)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbTable8)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(lbTextTable8))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbTable9)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(lbTextTable9)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbTable10)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(lbTextTable10)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbTable11)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(lbTextTable11)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbTable12)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(lbTextTable12))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbTable13)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(lbTextTable13)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbTable14)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(lbTextTable14)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbTable15)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(lbTextTable15)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbTable16)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(lbTextTable16)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbTable4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTextTable4))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbTable3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTextTable3))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbTable2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTextTable2))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbTable1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTextTable1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbTable8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTextTable8))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbTable7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTextTable7))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbTable6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTextTable6))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbTable5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTextTable5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbTable12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTextTable12))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbTable11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTextTable11))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbTable10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTextTable10))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbTable9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTextTable9)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbTable16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTextTable16))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbTable15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTextTable15))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbTable14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTextTable14))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbTable13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTextTable13)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jMenu1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 51, 51), new java.awt.Color(0, 51, 51), new java.awt.Color(0, 51, 51), new java.awt.Color(0, 51, 51)));
        jMenu1.setText("Công cụ");
        jMenu1.setEnabled(false);
        jMenu1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar2.add(jMenu1);

        jMenu2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 51, 51), new java.awt.Color(0, 51, 51), new java.awt.Color(0, 51, 51), new java.awt.Color(0, 51, 51)));
        jMenu2.setText("Thống kê");
        jMenu2.setEnabled(false);
        jMenu2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar2.add(jMenu2);

        jMenu3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 51, 51), new java.awt.Color(0, 51, 51), new java.awt.Color(0, 51, 51), new java.awt.Color(0, 51, 51)));
        jMenu3.setText("Nhân viên");
        jMenu3.setEnabled(false);
        jMenu3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar2.add(jMenu3);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (this.idTable == 0) {
            JOptionPane.showMessageDialog(null, "Chưa chọn bàn kìa má!!!");
        } else if (listTable.get(this.idTable - 1).getStatus() == 0) {
            BillController.addNewBill(this.idTable);
            int idBill = BillController.getIdBillByIdTable(idTable);
            int idFood = foodList.get(cbFood.getSelectedIndex()).getIDFood();
            int count = (Integer) spCount.getValue();
            addFoodToBill(idBill, idFood, count);
            loadTableBillById(idTable);
            loadTable();
        } else {
            int idBill = BillController.getIdBillByIdTable(idTable);
            int idFood = foodList.get(cbFood.getSelectedIndex()).getIDFood();
            int count = (Integer) spCount.getValue();
            addFoodToBill(idBill, idFood, count);
            loadTableBillById(idTable);
            loadTable();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        Tool tool = new Tool();
        //tool.setPower(type == 1);
        tool.setVisible(true);
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        Stat stat = new Stat();
        stat.setVisible(true);
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        Staff staff = new Staff();
        staff.setUserName(userName);
        staff.loadStaff(userName);
        staff.setPower(type == 1);
        staff.setVisible(true);
        //    System.out.println(userName);
    }//GEN-LAST:event_jMenu3MouseClicked

    private void cbCategoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCategoryItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            cbFood.removeAllItems();
            int id = Integer.parseInt(foodCategoryList.get(cbCategory.getSelectedIndex()).getIDCategory());
            try {
                foodList = FoodController.getListFoodByIdCategory(id);
                for (int i = 0; i < foodList.size(); i++) {
                    cbFood.addItem(foodList.get(i).getFoodName());
                }
            } catch (SQLException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_cbCategoryItemStateChanged

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:
        int tt = 0; // thanh tien
        DefaultTableModel model = (DefaultTableModel) tbBillInfo.getModel();
//        DefaultTableModel model0 = (DefaultTableModel) jTable4.getModel();
        if (model.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Chưa có dữ liệu để xuất file !");
        } else {
            JFileChooser chooser = new JFileChooser();
            chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            chooser.setAcceptAllFileFilterUsed(false);
            FileNameExtensionFilter ft = new FileNameExtensionFilter("PDF Documents", "pdf");
            chooser.addChoosableFileFilter(ft);
            int returnVal = chooser.showSaveDialog(this);
            if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
                try {
                    String fileName = chooser.getSelectedFile().getName();
                    String dir = chooser.getCurrentDirectory().toString();
                    File f = new File(dir + "\\" + fileName + ".pdf");

                    if (f.exists()) {
                        JOptionPane.showMessageDialog(this, "Tên file đã tồn tại, mời bạn chọn tên khác !");
                    } else {
                        Document document = new Document(PageSize.A6);
                        PdfWriter writer;
                        writer = PdfWriter.getInstance(document, new FileOutputStream(dir + "\\" + fileName + ".pdf"));
                        document.open();

                        Font f1 = new Font(BaseFont.createFont("/asset/vuArial.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED));
                        f1.setSize(10);
                        f1.setColor(BaseColor.BLACK);
                        f1.setStyle(BOLD);
                        Paragraph p1 = new Paragraph("TIỆM CAFE MANAGER", f1);
                        p1.setAlignment(Element.ALIGN_CENTER);
                        document.add(p1);

                        Font f11 = new Font(BaseFont.createFont("/asset/vuArial.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED));
                        f11.setSize(9);
                        f11.setColor(BaseColor.BLACK);
                        Paragraph p2 = new Paragraph("Đường Võ Nguyên Giáp, Ngọc Chi, Vĩnh Ngọc, Đông Anh, Hà Nội", f11);
                        p2.setAlignment(Element.ALIGN_CENTER);
                        document.add(p2);

                        Paragraph p22 = new Paragraph("033 502 5559", f11);
                        p22.setAlignment(Element.ALIGN_CENTER);
                        document.add(p22);

                        Paragraph p23 = new Paragraph("___________________________");
                        p23.setAlignment(Element.ALIGN_CENTER);
                        document.add(p23);

                        Font f2 = new Font(BaseFont.createFont("/asset/vuArial.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED));
                        f2.setSize(16);
                        f2.setColor(BaseColor.BLACK);
                        f2.setStyle(BOLD);
                        Paragraph p = new Paragraph("HÓA ĐƠN BÁN HÀNG", f2);
                        p.setAlignment(Element.ALIGN_CENTER);
                        document.add(p);

                        Calendar cal = new GregorianCalendar();
                        int year = cal.get(Calendar.YEAR);
                        int month = cal.get(Calendar.MONTH);
                        int day = cal.get(Calendar.DAY_OF_MONTH);
                        int hour = cal.get(Calendar.HOUR);
                        int minute = cal.get(Calendar.MINUTE);
                        String date = ("ngày " + day + " tháng " + (month + 1) + " năm " + year);
                        String time = ("Thời gian vào: " + hour + " giờ " + minute + " phút ");
                        Font f4 = new Font(BaseFont.createFont("/asset/vuArial.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED));
                        f4.setSize(8);
                        f4.setColor(BaseColor.BLACK);
//                        Paragraph p4 = new Paragraph("Hà Nội , \n" + date, f4);
                        Paragraph p5 = new Paragraph(time + date, f4);
                        Paragraph p7 = new Paragraph("");
//                        p4.setAlignment(Element.ALIGN_RIGHT);
                        p5.setAlignment(Element.ALIGN_LEFT);
                        document.add(p5);
//                        document.add(p4);
                        document.add(p7);

                        Paragraph p24 = new Paragraph("Thu ngân: ", f4);
                        p24.setAlignment(Element.ALIGN_LEFT);
                        document.add(p24);

                        Paragraph p27 = new Paragraph("Mã HĐ: " + "\n\n", f4);
                        p27.setAlignment(Element.ALIGN_LEFT);
                        document.add(p27);

                        Font f5 = new Font(BaseFont.createFont("/asset/vuArial.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED));
                        f5.setSize(8);
                        f5.setColor(BaseColor.BLACK);
                        f5.setStyle(ITALIC);

                        Font f3 = new Font(BaseFont.createFont("/asset/vuArial.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED));
                        f3.setSize(8);
                        f3.setColor(BaseColor.BLACK);

                        // bang cac san pham 
                        PdfPTable t1 = new PdfPTable(new float[]{1, 1, 1, 1});
                        t1.setWidthPercentage(100);
                        t1.setTotalWidth(120);
                        t1.setSpacingBefore(0);
                        t1.setSpacingAfter(0);
//                        PdfPCell c11 = new PdfPCell(new Phrase("Mã Sảm Phẩm", f7));
//                        t1.addCell(c11);
                        PdfPCell c12 = new PdfPCell(new Phrase("Tên Đồ Uống", f4));
                        t1.addCell(c12);
                        PdfPCell c13 = new PdfPCell(new Phrase("Số Lượng", f4));
                        t1.addCell(c13);
                        PdfPCell c14 = new PdfPCell(new Phrase("Đơn Giá", f4));
                        t1.addCell(c14);
                        PdfPCell c15 = new PdfPCell(new Phrase("Thành Tiền", f4));
                        t1.addCell(c15);
                        //}

                        for (int i = 0; i < model.getRowCount(); i++) {
                            t1.addCell(new Phrase(model.getValueAt(i, 0).toString(), f3));
                            t1.addCell(new Phrase(model.getValueAt(i, 1).toString(), f3));
                            t1.addCell(new Phrase(model.getValueAt(i, 2).toString(), f3));
                            t1.addCell(new Phrase(model.getValueAt(i, 3).toString(), f3));
                        }
                        document.add(t1);
                        int Giat = Integer.parseInt(tfTotal.getText());
                        int Dis = (int) spDiscount.getValue();
                        tt = Giat - Giat / 100 * Dis;
                        System.out.println(Giat + " " + Dis + " " + tt);
                        Paragraph p6 = new Paragraph("\n\nTổng Tiền: " + (String.valueOf(Giat) + "VND\n"), f4);
                        Paragraph p8 = new Paragraph("Giảm giá: " + (String.valueOf(Dis) + "%"), f4);
                        Paragraph p9 = new Paragraph("Tổng thanh toán: " + (String.valueOf(tt) + "VND\n"), f4);
                        p6.setAlignment(Element.ALIGN_RIGHT);
                        p8.setAlignment(Element.ALIGN_RIGHT);
                        p9.setAlignment(Element.ALIGN_RIGHT);
                        document.add(p6);
                        document.add(p8);
                        document.add(p9);
                        System.out.println("success");

                        Paragraph p25 = new Paragraph("___________________________");
                        p25.setAlignment(Element.ALIGN_BOTTOM);
                        p25.setAlignment(Element.ALIGN_CENTER);
                        document.add(p25);
                        Paragraph p14 = new Paragraph("Cảm Ơn Quý Khách", f4);
                        p14.setAlignment(Element.ALIGN_BOTTOM);
                        p14.setAlignment(Element.ALIGN_CENTER);
                        document.add(p14);

                        document.close();
                        JOptionPane.showMessageDialog(this, "Lưu file thành công !");
                        writer.close();
                    }

                } catch (Exception ex) {
                    ex.printStackTrace();
                }
                //
                TableController.setTableEmpty(idTable);
                BillController.payBillByIdTable(idTable, tt, userName);
                loadTable();
            } else {
                JOptionPane.showMessageDialog(this, "Hủy bỏ !");
            }
        }
    }//GEN-LAST:event_btnPrintActionPerformed

    private void tableMouseClicked() {
        for (JLabel jLabel : listLbTable) {
            jLabel.addMouseListener(new MouseListener() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    int i = Integer.parseInt(jLabel.getName());
                    idTable = i;
                    loadTableBillById(i);
                }

                @Override
                public void mousePressed(MouseEvent e) {
                }

                @Override
                public void mouseReleased(MouseEvent e) {
                }

                @Override
                public void mouseEntered(MouseEvent e) {
                }

                @Override
                public void mouseExited(MouseEvent e) {
                }
            });
        }
    }

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (tbBillInfo.getSelectedRow() == -1) { // neu chua chon mon can xoa
            JOptionPane.showMessageDialog(null, "Chọn món để xóa đã kìa...");
        } else {
            String nameFood = tbBillInfo.getValueAt(tbBillInfo.getSelectedRow(), 0).toString();
            System.out.println(nameFood);
            int idBill = BillController.getIdBillByIdTable(idTable);
            if (BillInfoController.deleteFood(nameFood, idBill)) {
                loadTableBillById(idTable);
            } else {
                JOptionPane.showMessageDialog(null, "Uii.. Có lỗi rồi đại vương ơi!!!");
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int idBill = BillController.getIdBillByIdTable(idTable);
        BillController.updateDiscount((Integer) spDiscount.getValue(), idBill);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (listTable.get(cbListTable.getSelectedIndex()).getStatus() == 0) { // ban dang rong thi moi duoc chuyen
            int idBill = BillController.getIdBillByIdTable(idTable);
            TableController.setTableEmpty(idTable); // xoa ban cu
            idTable = cbListTable.getSelectedIndex() + 1;
            TableController.setTableFull(idTable); // them ban moi
            BillController.updateIdTableByIdBill(idBill, idTable); // update trong bill
            loadTable();
        } else {
            JOptionPane.showMessageDialog(null, "Bàn đang có người kìa má...");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPrint;
    private javax.swing.JComboBox<String> cbCategory;
    private javax.swing.JComboBox<String> cbFood;
    private javax.swing.JComboBox<String> cbListTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbTable1;
    private javax.swing.JLabel lbTable10;
    private javax.swing.JLabel lbTable11;
    private javax.swing.JLabel lbTable12;
    private javax.swing.JLabel lbTable13;
    private javax.swing.JLabel lbTable14;
    private javax.swing.JLabel lbTable15;
    private javax.swing.JLabel lbTable16;
    private javax.swing.JLabel lbTable2;
    private javax.swing.JLabel lbTable3;
    private javax.swing.JLabel lbTable4;
    private javax.swing.JLabel lbTable5;
    private javax.swing.JLabel lbTable6;
    private javax.swing.JLabel lbTable7;
    private javax.swing.JLabel lbTable8;
    private javax.swing.JLabel lbTable9;
    private javax.swing.JLabel lbTextTable1;
    private javax.swing.JLabel lbTextTable10;
    private javax.swing.JLabel lbTextTable11;
    private javax.swing.JLabel lbTextTable12;
    private javax.swing.JLabel lbTextTable13;
    private javax.swing.JLabel lbTextTable14;
    private javax.swing.JLabel lbTextTable15;
    private javax.swing.JLabel lbTextTable16;
    private javax.swing.JLabel lbTextTable2;
    private javax.swing.JLabel lbTextTable3;
    private javax.swing.JLabel lbTextTable4;
    private javax.swing.JLabel lbTextTable5;
    private javax.swing.JLabel lbTextTable6;
    private javax.swing.JLabel lbTextTable7;
    private javax.swing.JLabel lbTextTable8;
    private javax.swing.JLabel lbTextTable9;
    private javax.swing.JSpinner spCount;
    private javax.swing.JSpinner spDiscount;
    private javax.swing.JTable tbBillInfo;
    private javax.swing.JTextField tfTotal;
    // End of variables declaration//GEN-END:variables

    private void loadData() throws SQLException {
        cbFood.removeAllItems();
        foodCategoryList = FoodCategoryController.getListCategory();
        for (int i = 0; i < foodCategoryList.size(); i++) {
            cbCategory.addItem(foodCategoryList.get(i).getNameCategory());
        }
        foodList = FoodController.getListFoodByIdCategory(Integer.parseInt(foodCategoryList.get(cbCategory.getSelectedIndex()).getIDCategory()));
        for (int i = 0; i < foodList.size(); i++) {
            cbFood.addItem(foodList.get(i).getFoodName());
        }
        // push cac text ban vao list
        listLbTextTable.add(lbTextTable1);
        listLbTextTable.add(lbTextTable2);
        listLbTextTable.add(lbTextTable3);
        listLbTextTable.add(lbTextTable4);
        listLbTextTable.add(lbTextTable5);
        listLbTextTable.add(lbTextTable6);
        listLbTextTable.add(lbTextTable7);
        listLbTextTable.add(lbTextTable8);
        listLbTextTable.add(lbTextTable9);
        listLbTextTable.add(lbTextTable10);
        listLbTextTable.add(lbTextTable11);
        listLbTextTable.add(lbTextTable12);
        listLbTextTable.add(lbTextTable13);
        listLbTextTable.add(lbTextTable14);
        listLbTextTable.add(lbTextTable15);
        listLbTextTable.add(lbTextTable16);

        // push cac label vao list
        listLbTable.add(lbTable1);
        listLbTable.add(lbTable2);
        listLbTable.add(lbTable3);
        listLbTable.add(lbTable4);
        listLbTable.add(lbTable5);
        listLbTable.add(lbTable6);
        listLbTable.add(lbTable7);
        listLbTable.add(lbTable8);
        listLbTable.add(lbTable9);
        listLbTable.add(lbTable10);
        listLbTable.add(lbTable11);
        listLbTable.add(lbTable12);
        listLbTable.add(lbTable13);
        listLbTable.add(lbTable14);
        listLbTable.add(lbTable15);
        listLbTable.add(lbTable16);

        tableMouseClicked();
    }

    private void loadTable() {
        Image imgEmpty = new ImageIcon(Home.class.getResource("/images/table_empty.png")).getImage();
        ImageIcon iconEmpty = new ImageIcon(imgEmpty);
        Image imgFull = new ImageIcon(Home.class.getResource("/images/table_full.png")).getImage();
        ImageIcon iconFull = new ImageIcon(imgFull); // neu co khach thi doi mau
        listTable = TableController.getListTable();
        for (int i = 0; i < listLbTable.size(); i++) {
            if (listTable.get(i).getStatus() == 1) {
                listLbTable.get(i).setIcon(iconFull);
            } else {
                listLbTable.get(i).setIcon(iconEmpty);
            }
        }
    }

    private void loadTableBillById(int idTable) {
        Vector column, data;
        DefaultTableModel dataModel = new DefaultTableModel();
        int idBill = BillController.getIdBillByIdTable(idTable);
        ArrayList<BillInfo> listBillInfo = BillInfoController.getListBillInfoByIdBill(idBill);
        ArrayList<Food> listFood = new ArrayList<>();
        column = new Vector();
        column.add("Tên món");
        column.add("Số lượng");
        column.add("Đơn giá");
        column.add("Thành tiền");
        dataModel.setColumnIdentifiers(column);

        for (int i = 0; i < listBillInfo.size(); i++) {
            data = new Vector();
            listFood = FoodController.getNameAndPriceFoodByIdFood(listBillInfo.get(i).getIDFood());
            data.add(listFood.get(0).getFoodName());
            int count = listBillInfo.get(i).getCount();
            data.add(count);
            int price = listFood.get(0).getPrice();
            data.add(price);
            data.add(count * price);
            dataModel.addRow(data);
        }
        tbBillInfo.setModel(dataModel);

        //load giam gia
        int discount = BillController.getDiscountByIdBill(idBill);
        spDiscount.setValue(discount);

        //set Bold Table Name
        String lbTextTable = "Bàn " + idTable;
        for (int i = 0; i < listLbTextTable.size(); i++) {
            if (listLbTextTable.get(i).getText().equals(lbTextTable)) {
                listLbTextTable.get(i).setFont(new java.awt.Font("Tahoma", java.awt.Font.BOLD, 11));
            } else {
                listLbTextTable.get(i).setFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11));
            }
        }
        //
        int totalPrice = 0;
        for (int i = 0; i < tbBillInfo.getRowCount(); i++) {
            totalPrice += (Integer) tbBillInfo.getValueAt(i, 3);
        }
        tfTotal.setText(Integer.toString(totalPrice));

        //
    }

    private void addFoodToBill(int idBill, int idFood, int count) {
        if (BillInfoController.tryUpdateFood(idBill, idFood, count)) { // kiểm tra món đã có trong hóa đơn chưa và thêm món
            JOptionPane.showMessageDialog(null, "Lại được thêm bạc rồi ^_^");
        } else if (BillInfoController.addNewFood(idBill, idFood, count) == 1) {
            JOptionPane.showMessageDialog(null, "Lại được thêm bạc rồi ^_^");
        } else {
            JOptionPane.showMessageDialog(null, "Uii.. Có lỗi rồi đại vương ơi!!!");
        }
    }

}
